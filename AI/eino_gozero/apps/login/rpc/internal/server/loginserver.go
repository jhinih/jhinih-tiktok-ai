// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: login.proto

package server

import (
	"context"

	"eino_gozero/apps/login/rpc/internal/logic"
	"eino_gozero/apps/login/rpc/internal/svc"
	"eino_gozero/apps/login/rpc/types/login"
)

type LoginServer struct {
	svcCtx *svc.ServiceContext
	login.UnimplementedLoginServer
}

func NewLoginServer(svcCtx *svc.ServiceContext) *LoginServer {
	return &LoginServer{
		svcCtx: svcCtx,
	}
}

func (s *LoginServer) SendCode(ctx context.Context, in *login.SendCodeRequest) (*login.SendCodeResponse, error) {
	l := logic.NewSendCodeLogic(ctx, s.svcCtx)
	return l.SendCode(in)
}

func (s *LoginServer) Register(ctx context.Context, in *login.RegisterRequest) (*login.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *LoginServer) Login(ctx context.Context, in *login.LoginRequest) (*login.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *LoginServer) RefreshToken(ctx context.Context, in *login.RefreshTokenRequest) (*login.RefreshTokenResponse, error) {
	l := logic.NewRefreshTokenLogic(ctx, s.svcCtx)
	return l.RefreshToken(in)
}

func (s *LoginServer) GetToken(ctx context.Context, in *login.GetTokenRequest) (*login.GetTokenResponse, error) {
	l := logic.NewGetTokenLogic(ctx, s.svcCtx)
	return l.GetToken(in)
}
